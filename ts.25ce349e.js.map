{"mappings":"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","sources":["./src/ts/cell.ts","./src/ts/position.ts","./src/ts/tetrimino.ts","./src/ts/area.ts","./src/ts/grid.ts","./src/ts/game.ts","./src/ts/app.ts","./src/ts/index.ts"],"sourcesContent":["const FILLED_COLOR = \"#000000\";\nconst EMPTY_COLOR = \"#E0E0E0\";\n\nclass CellOuter {\n  elem: HTMLElement;\n  inner: CellInner;\n\n  constructor(parentElem) {\n    this.elem = this.initialElem();\n    this.inner = new CellInner(this.elem);\n    parentElem.appendChild(this.elem);\n  }\n\n  initialElem = (): HTMLElement => {\n    const elem = document.createElement(\"li\");\n    elem.style.listStyle = \"none\";\n    elem.style.width = \"78%\";\n    elem.style.height = \"78%\";\n    elem.style.border = \"2px solid\";\n    elem.style.display = \"flex\";\n    elem.style.justifyContent = \"center\";\n    elem.style.alignItems = \"center\";\n    return elem;\n  };\n\n  fill = () => {\n    this.elem.style.borderColor = FILLED_COLOR;\n    this.inner.fill();\n  };\n\n  clear = () => {\n    this.elem.style.borderColor = EMPTY_COLOR;\n    this.inner.clear();\n  };\n}\n\nclass CellInner {\n  elem: HTMLElement;\n\n  constructor(parentElem) {\n    this.elem = document.createElement(\"div\");\n    parentElem.appendChild(this.elem);\n\n    this.elem.style.width = \"75%\";\n    this.elem.style.height = \"75%\";\n    this.elem.style.backgroundColor = EMPTY_COLOR;\n  }\n\n  fill = () => {\n    this.elem.style.backgroundColor = FILLED_COLOR;\n  };\n\n  clear = () => {\n    this.elem.style.backgroundColor = EMPTY_COLOR;\n  };\n}\n\nexport default CellOuter;\n","class Position {\n  x: number;\n  y: number;\n\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n}\n\nexport class AbsolutePosition extends Position {\n  moveDown = (): void => {\n    this.y -= 1;\n  };\n  moveUp = (): void => {\n    this.y += 1;\n  };\n  moveRight = (): void => {\n    this.x += 1;\n  };\n  moveLeft = (): void => {\n    this.x -= 1;\n  };\n  // getAbsolute(relativePosition: RelativePosition) {\n  //   return new AbsolutePosition(\n  //     this.x + relativePosition.x,\n  //     this.y + relativePosition.y\n  //   );\n  // }\n}\n\n// export class RelativePosition extends Position {}\n","import { AbsolutePosition } from \"./position\";\nimport Grid from \"./grid\";\n\ntype Pattern = number[][];\n\ntype Shape = {\n  baselineFromBottom: number;\n  patterns: Pattern[];\n};\n\nconst shapeT: Shape = {\n  baselineFromBottom: 1, // which line of 4*4 is at the top row when it appears(lowest: 0)\n  patterns: [\n    [\n      [0, 0, 0, 0],\n      [0, 0, 1, 0],\n      [0, 1, 1, 1],\n      [0, 0, 0, 0],\n    ],\n    [\n      [0, 0, 0, 0],\n      [0, 0, 1, 0],\n      [0, 0, 1, 1],\n      [0, 0, 1, 0],\n    ],\n    [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 1, 1, 1],\n      [0, 0, 1, 0],\n    ],\n    [\n      [0, 0, 0, 0],\n      [0, 0, 1, 0],\n      [0, 1, 1, 0],\n      [0, 0, 1, 0],\n    ],\n  ],\n};\n\n// const shapeI = {\n//   initialCenterPosition: (area) =>\n//     new AbsolutePosition(Math.ceil((area.width - 1) / 2), area.height - 1),\n//   relativePositions: [\n//     new RelativePosition(-2, 0),\n//     new RelativePosition(-1, 0),\n//     new RelativePosition(0, 0),\n//     new RelativePosition(1, 0),\n//   ],\n// };\n\n// const shapeO = {\n//   initialCenterPosition: (area) =>\n//     new AbsolutePosition(Math.ceil((area.width - 1) / 2), area.height - 1),\n//   relativePositions: [\n//     new RelativePosition(-1, 0),\n//     new RelativePosition(-1, 1),\n//     new RelativePosition(0, 0),\n//     new RelativePosition(0, 1),\n//   ],\n// };\n\n// const shapeZ = {\n//   initialCenterPosition: (area) =>\n//     new AbsolutePosition(Math.floor((area.width - 1) / 2), area.height - 1),\n//   relativePositions: [\n//     new RelativePosition(-1, 1),\n//     new RelativePosition(0, 1),\n//     new RelativePosition(0, 0),\n//     new RelativePosition(1, 0),\n//   ],\n// };\n\n// const shapeS = {\n//   initialCenterPosition: (area) =>\n//     new AbsolutePosition(Math.ceil((area.width - 1) / 2), area.height - 1),\n//   relativePositions: [\n//     new RelativePosition(1, 1),\n//     new RelativePosition(0, 1),\n//     new RelativePosition(0, 0),\n//     new RelativePosition(-1, 0),\n//   ],\n// };\n\n// const shapeL = {\n//   initialCenterPosition: (area) =>\n//     new AbsolutePosition(Math.ceil((area.width - 1) / 2), area.height - 1),\n//   relativePositions: [\n//     new RelativePosition(-2, 0),\n//     new RelativePosition(-1, 0),\n//     new RelativePosition(0, 0),\n//     new RelativePosition(0, 1),\n//   ],\n// };\n\n// const shapeJ = {\n//   initialCenterPosition: (area) =>\n//     new AbsolutePosition(Math.floor((area.width - 1) / 2), area.height - 1),\n//   relativePositions: [\n//     new RelativePosition(0, 0),\n//     new RelativePosition(-1, 0),\n//     new RelativePosition(1, 0),\n//     new RelativePosition(0, 1),\n//   ],\n// };\n\n// const shapes = [shapeT, shapeI, shapeO, shapeZ, shapeS, shapeL, shapeJ];\n\nclass Tetrimino {\n  position: AbsolutePosition;\n  patternIndex: number = 0;\n  grid: Grid;\n  shape: Shape;\n\n  constructor(grid) {\n    this.shape = shapeT;\n    console.log(grid.area.height);\n    this.position = new AbsolutePosition(1, grid.area.height - 1);\n    // shapes[Math.floor(Math.random() * shapes.length)]\n    this.grid = grid;\n  }\n\n  // initialPosition(area): AbsolutePosition {\n  //   new AbsolutePosition((area.with - this.shape.patterns) / 2, 0);\n  // }\n\n  currentPattern = (): Pattern => {\n    return this.shape.patterns[this.patternIndex];\n  };\n\n  occupiedAbsolutePositions = (): AbsolutePosition[] => {\n    const positions: AbsolutePosition[] = [];\n    this.currentPattern().forEach((row, i) =>\n      row.forEach((cell, j) => {\n        if (cell == 1)\n          positions.push(\n            new AbsolutePosition(this.position.x + j, this.position.y + (3 - i))\n          );\n      })\n    );\n    return positions;\n  };\n\n  moveDown = (): void => {\n    this.move(this.position.moveDown, this.position.moveUp);\n  };\n\n  moveRight = (): void => {\n    this.move(this.position.moveRight, this.position.moveLeft);\n  };\n\n  moveLeft = (): void => {\n    this.move(this.position.moveLeft, this.position.moveRight);\n  };\n\n  rotateClockwise = (): void => {\n    this.move(this.incrementPatternIndex, this.decrementPatternIndex);\n  };\n\n  rotateCounterClockwise = (): void => {\n    this.move(this.decrementPatternIndex, this.incrementPatternIndex);\n  };\n\n  incrementPatternIndex = (): void => {\n    this.patternIndex = (this.patternIndex + 1) % this.shape.patterns.length;\n  };\n\n  decrementPatternIndex = (): void => {\n    this.patternIndex =\n      (this.patternIndex + this.shape.patterns.length - 1) %\n      this.shape.patterns.length;\n  };\n\n  move = (attempt: () => void, reset: () => void): void => {\n    attempt();\n    if (!this.canBeIn(this.occupiedAbsolutePositions())) {\n      reset();\n    }\n  };\n\n  canBeIn = (nextOccupiedAbsolutePositions: AbsolutePosition[]): boolean => {\n    return nextOccupiedAbsolutePositions.every(this.grid.within);\n  };\n}\n\nexport default Tetrimino;\n","class Area {\n  height: number;\n  width: number;\n\n  constructor(height, width) {\n    this.height = height;\n    this.width = width;\n  }\n}\n\nexport default Area;\n","import Cell from \"./cell\";\nimport Tetrimino from \"./tetrimino\";\nimport { RelativePosition } from \"./position\";\nimport Area from \"./area\";\n\nclass Grid {\n  area: Area = new Area(20, 10);\n  elem: HTMLElement;\n  cells: Cell[][];\n  currentTetrimino: Tetrimino = new Tetrimino(this);\n\n  constructor(parentElem) {\n    this.elem = this.initialElem(this.area);\n    this.cells = this.initialCells(this.area);\n    parentElem.appendChild(this.elem);\n    this.draw();\n    document.addEventListener(\"keydown\", (e) => this.onKeyDown(e));\n  }\n\n  initialElem = (area: Area): HTMLElement => {\n    const elem = document.createElement(\"ul\");\n    elem.style.display = \"grid\";\n    elem.style.gridTemplateColumns = `repeat(${area.width}, 32px)`;\n    elem.style.gridTemplateRows = `repeat(${area.height}, 32px)`;\n    elem.style.justifyItems = \"center\";\n    elem.style.alignItems = \"center\";\n    return elem;\n  };\n\n  initialCells = (area: Area): Cell[][] => {\n    return Array(area.height)\n      .fill(null)\n      .map(() =>\n        Array(area.width)\n          .fill(null)\n          .map(() => new Cell(this.elem))\n      );\n  };\n\n  draw = (): void => {\n    this.cells.forEach((cellsRow) => cellsRow.forEach((cell) => cell.clear()));\n    this.currentTetrimino.occupiedAbsolutePositions().forEach((position) => {\n      if (this.within(position)) {\n        this.cells[this.area.height - 1 - position.y][position.x].fill();\n      }\n    });\n  };\n\n  tick = (): void => {\n    this.currentTetrimino.moveDown();\n    this.draw();\n  };\n\n  onKeyDown = (e: KeyboardEvent): void => {\n    switch (e.key) {\n      case \"ArrowLeft\":\n        this.currentTetrimino.moveLeft();\n        this.draw();\n        break;\n      case \"ArrowRight\":\n        this.currentTetrimino.moveRight();\n        this.draw();\n        break;\n      case \"d\":\n        this.currentTetrimino.rotateClockwise();\n        this.draw();\n        break;\n      case \"s\":\n        this.currentTetrimino.rotateCounterClockwise();\n        this.draw();\n        break;\n    }\n  };\n\n  within = (position: RelativePosition): boolean => {\n    return (\n      0 <= position.x &&\n      position.x <= this.area.width - 1 &&\n      0 <= position.y &&\n      position.y <= this.area.height - 1\n    );\n  };\n}\n\nexport default Grid;\n","import Grid from \"./grid\";\n\nclass Game {\n  elem: HTMLElement = document.createElement(\"div\");\n  grid: Grid = new Grid(this.elem);\n\n  constructor(parentElem) {\n    parentElem.appendChild(this.elem);\n\n    setInterval(() => {\n      this.grid.tick();\n    }, 500);\n  }\n}\n\nexport default Game;\n","import Game from \"./game\";\n\nclass App {\n  game: Game | null;\n  elem: HTMLElement = document.getElementById(\"app\");\n\n  constructor() {\n    this.prepareGame();\n  }\n\n  prepareGame = () => {\n    this.game = null;\n    document.addEventListener(\"keypress\", () => {\n      if (this.game) return;\n      this.game = new Game(this.elem);\n    });\n  };\n}\n\nexport default App;\n","import App from \"./app\";\n\nwindow.onload = () => new App();\n"],"names":["CellOuter","parentElem","_this","this","$c1f283888dc145d78e0495992940440$var$_classCallCheck","$c1f283888dc145d78e0495992940440$var$_defineProperty","elem","document","createElement","style","listStyle","width","height","border","display","justifyContent","alignItems","borderColor","inner","fill","clear","initialElem","CellInner","appendChild","_this2","backgroundColor","AbsolutePosition","y","x","Position","$eb570feff44e7af70ef032f6391057a0$var$_classCallCheck","shapeT","baselineFromBottom","patterns","Tetrimino","grid","$df028aa2f109c0c2abf209569d4910$var$_classCallCheck","$df028aa2f109c0c2abf209569d4910$var$_defineProperty","shape","patternIndex","positions","currentPattern","forEach","row","i","cell","j","push","$eb570feff44e7af70ef032f6391057a0$export$AbsolutePosition","position","move","moveDown","moveUp","moveRight","moveLeft","incrementPatternIndex","decrementPatternIndex","length","attempt","reset","canBeIn","occupiedAbsolutePositions","nextOccupiedAbsolutePositions","every","within","console","log","area","Area","$e9c46de253b258f807e5a19fa40d487e$var$_classCallCheck","Grid","$edff55f5aeba37ebe413d2da667252$var$_classCallCheck","$edff55f5aeba37ebe413d2da667252$var$_defineProperty","$e9c46de253b258f807e5a19fa40d487e$export$default","$df028aa2f109c0c2abf209569d4910$export$default","gridTemplateColumns","concat","gridTemplateRows","justifyItems","Array","map","$c1f283888dc145d78e0495992940440$export$default","cells","cellsRow","currentTetrimino","draw","e","key","rotateClockwise","rotateCounterClockwise","initialCells","addEventListener","onKeyDown","Game","$fffca1628359435431f117ee432fa7b2$var$_classCallCheck","$fffca1628359435431f117ee432fa7b2$var$_defineProperty","$edff55f5aeba37ebe413d2da667252$export$default","setInterval","tick","App","$f4e96cff181c2608286fa3502e43a3e3$var$_classCallCheck","$f4e96cff181c2608286fa3502e43a3e3$var$_defineProperty","getElementById","game","$fffca1628359435431f117ee432fa7b2$export$default","prepareGame","window","onload","$f4e96cff181c2608286fa3502e43a3e3$export$default"],"version":3,"file":"ts.25ce349e.js.map"}